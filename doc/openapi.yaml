openapi: 3.0.1
info:
  contact:
    email: unity@jpl.nasa.gov
  description: DAPA Process Mapper
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://unity.jpl.nasa.gov/terms/
  title: DAPA Process Mapper
  version: 0.0.1
servers:
  - description: Local development server
    url: http://localhost:8080/process-mapper/v0/

paths:


  # 20200516, xing
  # this would have openapi-generator create bad code
  # ref: https://github.com/OpenAPITools/openapi-generator/issues/3304
  #/RepresentationInformation/{id}:
  /Collection/{collection_id}:
    get:
      summary: "Get processor list by collection id"
      description: Get processor list by collection id
      operationId: get_processor_list_by_id
      parameters:
        - $ref: '#/components/parameters/CollectionId'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processors'
          description: Successfully return a list of processors
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse400'
          description: processor not found
      x-openapi-router-controller: openapi_server.controllers.default_controller

  /Collection/{collection_id}/timeSeries:
    post:
      summary: "Get time series by collection id"
      description: Get time series by collection id
      operationId: get_time_series by collection id
      parameters:
        - $ref: '#/components/parameters/CollectionId'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeries'
          description: Successfully return a time series
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse400'
          description: processor not found
      x-openapi-router-controller: openapi_server.controllers.default_controller

components:

  parameters:
      CollectionId:
        description: id of a collection
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          $ref: '#/components/schemas/CollectionId'
        style: simple

  responses:
    400Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InlineResponse400'
      description: Invalid store
    404Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InlineResponse400'
      description: Store not found

  schemas:
    InlineResponse400:
      description: A customized HTTP 400 response which explains why the service cannot or will not process the store.
      properties:
        message:
          description: A message to accompany the HTTP 400 response.
          type: string

    CollectionId:
      description: collection id
      type: string
      pattern: ^(\w{8}\-\w{4}\-\w{4}\-\w{4}\-\w{12}\.){0,1}\w{8}\-\w{4}\-\w{4}\-\w{4}\-\w{12}$
      example: 21608d3b-b597-4bd7-882e-f18e8b95b6d8

    Processors:
      type: array
      items:
        type: string
        #$ref: '#/components/schemas/ProcessorMin'

    TimeSeries:
      type: array
      items:
        type: number
        format: float
